#!/bin/bash

#deps: mailx, qpress, xtrabackup

BASEPATH=<%= @backupdest %>
ARCHIVEDIR=<%= @archivedir %>
MAILTO="<%= @mailto %>"

FDATE=$(date +%Y-%m-FULL)
LASTMONTH=$(date --date="$(date +%Y-%m-15) -2 month" "+%Y-%m" )
LASTYEAR=$(date --date="$(date +%Y-%m-15) -1 year" "+%Y" )
DATE=$(date +%Y-%m-%d)
HOST=$(hostname -f)


if [ -e /nomysqlbackup ]
then
SUBJECT="NO BACKUP $HOST $DATE"
<% if @mailfrom.nil? %>
( echo "$SUBJECT" ) | mailx -s "$SUBJECT" -r root@cashongo.co.uk $MAILTO
<% else %>
( echo "$SUBJECT" ; echo ; cat $TIMEFILE ) | mailx -S "from=<%= @mailfrom %>" -s "$SUBJECT" -r root@cashongo.co.uk $MAILTO
<% end %>
	exit 1
fi

TMPFILE=$(mktemp /tmp/output.XXXXXXXX.txt)
S3OUTPUT=$(mktemp /tmp/s3.XXXXXXXX.txt)
TIMEFILE=$(mktemp /tmp/timeout.XXXXXXXX.txt)

if [ -e $BASEPATH/$FDATE ]
then
	#We have full backup, create incrementals
	BACKUPTYPE=INCR
	/usr/bin/time -v -o $TIMEFILE innobackupex --compress --safe-slave-backup --rsync --incremental $BASEPATH --incremental-basedir=$BASEPATH/$FDATE > $TMPFILE  2>&1
	RES=$?
else
	#IF there is no FULL backup this month, make one
	BACKUPTYPE=FULL
	/usr/bin/time -v -o $TIMEFILE innobackupex --compress --safe-slave-backup --rsync --no-timestamp $BASEPATH/$FDATE  > $TMPFILE 2>&1
	RES=$?
	#Move stuff to AWS

	#move old backups to ARCHIVEDIR

	/usr/bin/time -a -v -o $TIMEFILE mv $BASEPATH/$LASTMONTH-FULL $ARCHIVEDIR && /usr/bin/time -a -v -o $TIMEFILE rm -rf $BASEPATH/$LASTMONTH-*
	for fullbackupdir in $ARCHIVEDIR/*FULL
	do
		ARCHIVENAME=$(basename $fullbackupdir)
		/usr/bin/time -a -v -o $TIMEFILE aws s3 mv $fullbackupdir <%= @s3url %>/$ARCHIVENAME --recursive --sse >> $S3OUTPUT 2>&1
	done
fi

ISOK=0

tail -1 $TMPFILE | grep 'completed OK' > /dev/null || ISOK=1

if [ "$ISOK" == 0 ] && [ "$RES" == 0 ]
then
	BTIME=$(awk 'END {print $2}' $TMPFILE )
	SUBJECT="$BACKUPTYPE backup success $HOST $DATE"
	CONTENT="TIME $BTIME"
else
	SUBJECT="$BACKUPTYPE BACKUP FAIL! $HOST $DATE"
	CONTENT="RESULT $RES"
	if [ $BACKUPTYPE == "FULL" ]
	then
		I=1
		while /usr/bin/test -e ${BASEPATH}/${FDATE}.failed.${I}
		do
			I=$(($I+1))
		done
		mv $BASEPATH/$FDATE ${BASEPATH}/${FDATE}.failed.${I}
	fi
fi
<% if @mailfrom.nil? %>
( echo "$SUBJECT" ; echo ; echo $CONTENT ; cat $TIMEFILE $S3OUTPUT) | mailx -s "$SUBJECT" -a $TMPFILE -r root@cashongo.co.uk $MAILTO
<% else %>
( echo "$SUBJECT" ; echo ; echo $CONTENT ; cat $TIMEFILE $S3OUTPUT) | mailx -S "from=<%= @mailfrom %>" -s "$SUBJECT" -a $TMPFILE -r root@cashongo.co.uk $MAILTO
<% end %>

rm $TMPFILE
rm $TIMEFILE
rm $S3OUTPUT
